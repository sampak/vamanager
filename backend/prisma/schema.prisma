// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id                String        @id @default(uuid())
  firstName         String
  lastName          String
  email             String        @unique
  password          String
  allowShowLastName Boolean?      @default(false)
  status            users_status  @default(ACTIVE)
  airlines          Airlines[]
  updatedAt         DateTime      @updatedAt
  createdAt         DateTime      @default(now())
  memberships       Memberships[]
}

model Airports {
  id           String     @id @default(uuid())
  icao         String
  name         String
  country      String
  lat          Float
  lng          Float
  runwayLength Int        @default(0)
  airlines     Airlines[]
  updatedAt    DateTime   @updatedAt
  createdAt    DateTime   @default(now())
}

model Airlines {
  id           String        @id @default(uuid())
  image        String?
  name         String        @unique
  icao         String        @unique
  baseId       String
  base         Airports?     @relation(fields: [baseId], references: [id])
  ownerId      String
  owner        Users?        @relation(fields: [ownerId], references: [id])
  memberships  Memberships[]
  aircrafts    Aircrafts[]
  balance      Int
  rating       Int           @default(500)
  joining_type joining_type  @default(APPROVAL_NEEDED)
  options      String
  updatedAt    DateTime      @updatedAt
  createdAt    DateTime      @default(now())
}

model Memberships {
  id        String            @id @default(uuid())
  airlineId String
  airline   Airlines          @relation(fields: [airlineId], references: [id])
  userId    String
  user      Users             @relation(fields: [userId], references: [id])
  status    membership_status @default(WAITING_APPROVAL)
  role      membership_role   @default(PILOT)
  rating    Int               @default(500)
  updatedAt DateTime          @updatedAt
  createdAt DateTime          @default(now())
}

model Aircrafts {
  id           String   @id @default(uuid())
  image        String
  airlineId    String
  airline      Airlines @relation(fields: [airlineId], references: [id])
  manufacture  String   @default("")
  type         String
  registration String   @unique
  minutes      Int      @default(0)
  miles        Int      @default(0)
  condition    Int      @default(100)
  updatedAt    DateTime @updatedAt
  createdAt    DateTime @default(now())
}

model AircraftsDealer {
  id          String   @id @default(uuid())
  manufacture String   @default("")
  type        String
  image       String
  cost        Int
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
}

enum membership_role {
  ADMIN
  DISPATCHER
  PILOT
}

enum membership_status {
  ACTIVE
  NON_ACTIVE
  DISABLED
  WAITING_APPROVAL
  WAITING_TO_JOIN
}

enum joining_type {
  PUBLIC_ACCESS
  INVITATION_ONLY
  APPROVAL_NEEDED
}

enum users_status {
  ACTIVE
  NON_ACTIVE
  SUSPENDED
}
