// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id                String              @id @default(uuid())
  firstName         String
  lastName          String
  email             String              @unique
  password          String
  allowShowLastName Boolean?            @default(false)
  status            users_status        @default(ACTIVE)
  airlines          Airlines[]
  schedules         Schedules[]
  updatedAt         DateTime            @updatedAt
  createdAt         DateTime            @default(now())
  memberships       Memberships[]
  verificationCodes VerificationCodes[]
}

model Airports {
  id                    String      @id @default(uuid())
  icao                  String
  iata                  String
  elevation_ft          Float
  name                  String
  keywords              String
  country               String
  lat                   Float
  lng                   Float
  size                  String
  passangers            Int
  airlines              Airlines[]
  schedules_origin      Schedules[] @relation("origin")
  schedules_destination Schedules[] @relation("destination")
  updatedAt             DateTime    @updatedAt
  createdAt             DateTime    @default(now())
}

model Airlines {
  id           String        @id @default(uuid())
  image        String?
  name         String        @unique
  icao         String        @unique
  baseId       String
  base         Airports?     @relation(fields: [baseId], references: [id])
  ownerId      String
  owner        Users?        @relation(fields: [ownerId], references: [id])
  memberships  Memberships[]
  aircrafts    Aircrafts[]
  schedules    Schedules[]
  costIndex    Int           @default(15)
  balance      Int
  rating       Int           @default(500)
  joining_type joining_type  @default(APPROVAL_NEEDED)
  options      String
  updatedAt    DateTime      @updatedAt
  createdAt    DateTime      @default(now())
}

model Memberships {
  id        String            @id @default(uuid())
  airlineId String
  airline   Airlines          @relation(fields: [airlineId], references: [id])
  userId    String
  user      Users             @relation(fields: [userId], references: [id])
  status    membership_status @default(WAITING_APPROVAL)
  role      membership_role   @default(PILOT)
  rating    Int               @default(500)
  updatedAt DateTime          @updatedAt
  createdAt DateTime          @default(now())
}

model Aircrafts {
  id           String         @id @default(uuid())
  image        String
  airlineId    String
  airline      Airlines       @relation(fields: [airlineId], references: [id])
  typeId       String
  type         TypeOfAircraft @relation(fields: [typeId], references: [id])
  registration String         @unique
  minutes      Int            @default(0)
  miles        Int            @default(0)
  condition    Int            @default(100)
  updatedAt    DateTime       @updatedAt
  createdAt    DateTime       @default(now())
}

model AircraftsDealer {
  id        String         @id @default(uuid())
  typeId    String         @default("")
  type      TypeOfAircraft @relation(fields: [typeId], references: [id])
  image     String
  cost      Int
  updatedAt DateTime       @updatedAt
  createdAt DateTime       @default(now())
}

model TypeOfAircraft {
  id              String            @id @default(uuid())
  type            String
  name            String
  Schedules       Schedules[]
  aircrafts       Aircrafts[]
  aircraftsDealer AircraftsDealer[]
  updatedAt       DateTime          @updatedAt
  createdAt       DateTime          @default(now())
}

model Schedules {
  id                  String            @id @default(uuid())
  callsign            String
  flightNumber        String
  estimatedFuel       Int               @default(0)
  airDistance         Int               @default(0)
  recommendedRoute    String?
  type                type_of_schedules @default(EVERYDAY)
  airlineId           String
  estimatedPassangers Int               @default(100)
  originId            String
  destinationId       String
  creatorId           String
  typeOfAircraftId    String
  day                 DateTime
  weekDay             Int               @default(0)
  flightTime          Int               @default(0)
  costIndex           String            @default("AUTO")
  status              schedule_status
  creator             Users             @relation(fields: [creatorId], references: [id])
  airline             Airlines          @relation(fields: [airlineId], references: [id])
  origin              Airports          @relation("origin", fields: [originId], references: [id])
  destination         Airports          @relation("destination", fields: [destinationId], references: [id])
  type_of_aircraft    TypeOfAircraft    @relation(fields: [typeOfAircraftId], references: [id])
  type_of_flight      type_of_flight
  updatedAt           DateTime          @updatedAt
  createdAt           DateTime          @default(now())
}

model VerificationCodes {
  id        String   @id @default(uuid())
  code      String
  userId    String
  user      Users    @relation(fields: [userId], references: [id])
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

enum schedule_status {
  CREATING
  CREATED
}

enum type_of_flight {
  CARGO
  PASSANGERS
}

enum type_of_schedules {
  EVERYDAY
  ON_CERTAIN_DAYS
  ONCE
}

enum membership_role {
  ADMIN
  DISPATCHER
  PILOT
}

enum membership_status {
  ACTIVE
  NON_ACTIVE
  DISABLED
  WAITING_APPROVAL
  WAITING_TO_JOIN
}

enum joining_type {
  PUBLIC_ACCESS
  INVITATION_ONLY
  APPROVAL_NEEDED
}

enum users_status {
  ACTIVE
  NON_ACTIVE
  SUSPENDED
  PENDING_CODE
  WAITING_TO_JOIN
}
